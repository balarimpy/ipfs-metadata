apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ipfs
  template:
    metadata:
      labels:
        app: ipfs
    spec:
      containers:
      - name: ipfs
        image: 339713100066.dkr.ecr.us-east-1.amazonaws.com/ipfs:latest
        ports:
        - containerPort: 8080
        env:
        - name: POSTGRES_HOST
          value: "my-postgres-db.cdawsswo2q7v.us-east-1.rds.amazonaws.com"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: rds-db-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rds-db-credentials
              key: password
        - name: POSTGRES_DB
          value: "ipfs_db"
        volumeMounts:
        - name: env-volume
          mountPath: /app/.env # Adjusted mount path
          subPath: .env
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: env-volume
        configMap:
          name: ipfs-env

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ipfs-env
data:
  .env: |
    POSTGRES_HOST=my-postgres-db.cdawsswo2q7v.us-east-1.rds.amazonaws.com
    POSTGRES_PORT=5432
    POSTGRES_DB=ipfs_db

---

apiVersion: v1
kind: Service
metadata:
  name: ipfs
spec:
  type: LoadBalancer
  selector:
    app: ipfs
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---

apiVersion: v1
kind: Secret
metadata:
  name: rds-db-credentials
type: Opaque
data:
  username: aXBmc191c2Vy 
  password: aXBmc19wYXNz 
